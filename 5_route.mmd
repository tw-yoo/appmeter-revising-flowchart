flowchart LR
    Input[/req: movementIdOrdMapping/]
    subgraph Route
        subgraph req.forEach
            direction TB
            itReq["(movement, ordList) ->"]

            subgraph ordList.forLoop
                direction TB
                forCondition["for (i=0 until ordList.lastIndex):"]
                startEnd["
                    start = movement.gpsRecordList[i]
                    end = movement.gpsRecordList[i+1]
                "]

                emissionRoute["
                    curEmissionList = movement.emissionList where ord == i+1
                    prevRouteList = movement.routeList where ord == i
                "]

                subgraph curEmissionList.forEach
                    direction TB
                    itEmission["emission ->"]
                    GetTransitionList["
                        transitionList = movement.transitionList.filter{
                        ord == i+1 && endNodeId == emission.nodeId}
                    "]

                    GetMaxProbRoute["
                        getMaxProbRoute from transitionList where 
                        (prevRoute = prevRouteList.lastNodeId == transition.startNodeId &&
                        routeProb = prevRoute.prob * transition.prob * emission.prob)
                        with maxRouteProb
                    "]

                    AddRoute["movement.routeList.add(route)"]

                    itEmission --> GetTransitionList --> GetMaxProbRoute --> AddRoute
                end

                forCondition --> startEnd --> emissionRoute --> curEmissionList.forEach

            end
            itReq --> ordList.forLoop
        end
    end

Input --> Route