flowchart LR
    Input[/req: movementIdOrdMapping/]

    subgraph Emission

        subgraph req.forEach
            direction TB 
            
            itReq["(movement, ordList) ->"]
            lastEligibleGpsRecord["
                lastEligibleGpsRecord = movement.gpsRecord
                .maxOf{ord < min(ordList)}
            "]

            subgraph lastEligibleGpsRecord.NodeCandidateList.forEach
                direction TB
                itNodeCandidate["nodeCandidate ->"]

                GetEmission["
                    1. Get distance between nodeCandidate and lastEligibleGpsRecord 
                    2. Calculate emission probability of NodeCandidate
                "]

                AddEmission["
                    movement.emissionList.add(Emission)
                "]

                itNodeCandidate --> GetEmission --> AddEmission
            end

            itReq --> lastEligibleGpsRecord --> lastEligibleGpsRecord.NodeCandidateList.forEach

        end
    end
    
    Input --> Emission