flowchart TD
	I[/GpsRecordList/]
	GpsRecordListForEach[GpsRecordList.forEach]
	GpsRecordListBuffer[Make LineString to polygon. buffer: 0.003]
	subgraph UpdateRoadNetwork
		direction TB
		IfGpsRecordEligible{GpsRecord.eligible?}
		GpsRecordEligible[let coord: GpsRecord.lat, GpsRecord.lng]	
		GpsRecordNotEligible[let coord: latest eligible GpsRecord.lat, GpsRecord.lng]

		Buffer[Get RoadLink around coord]
		GetRoadLink[GpsRecord에서 각 RoadLink까지 가까운 점 찾기 <br> 범위: 0.003]
		IfClosestPointOnTheEdge{Is the closest point located <br> on the edge of the RoadLink?}
		IfYes[Assign the closest point <br> as a node candidate]

		subgraph SplitRoadLink
			direction TB
			Projection[Project coord to RoadLink]
			LinkCoordListFor[for i = 0 until RoadLink.coords.lastIndex: <br> subRoadLink = RoadLink.coords.i to RoadLink.coords.i+1]
			IfProjOnSubLink{projected coord <br> on the subRoadLink?}
			
			ProjOnSubLink[NewNode: projected coord. ord = k <br> FirstRoadLink: from RoadLink.source to projected coord <br> SecondRoadLink: from projected coord to RoadLink.target]
			NewNodeCandidate[Assign NewNode as a node candidate]

			Projection --> LinkCoordListFor --> IfProjOnSubLink
			IfProjOnSubLink --yes--> ProjOnSubLink --> NewNodeCandidate --> Terminate(( ))
			IfProjOnSubLink --no. i+1--> LinkCoordListFor
		end


	GpsRecordListForEach --> IfGpsRecordEligible
	IfGpsRecordEligible --Yes--> GpsRecordEligible
	IfGpsRecordEligible --No--> GpsRecordNotEligible

	GpsRecordEligible & GpsRecordNotEligible --> Buffer
	Buffer --> GetRoadLink --> IfClosestPointOnTheEdge
	IfClosestPointOnTheEdge --Yes--> IfYes
	IfClosestPointOnTheEdge --No--> Projection
	end

I --> UpdateRoadNetwork